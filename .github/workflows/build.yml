name: Build and Release RimWorld Mod

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    strategy:
      matrix:
        version: [1.5, 1.6]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '6.0.x'
        
    - name: Build for RimWorld ${{ matrix.version }}
      run: |
        cd Source/RIMAPI
        # Build the .csproj file directly, not the .sln
        dotnet build RimApi.csproj -c Release-${{ matrix.version }} --nologo --verbosity minimal
        
    - name: Create Release Package for ${{ matrix.version }}
      run: |
        $tagVersion = $env:GITHUB_REF -replace 'refs/tags/v', ''
        $modName = "RIMAPI"  # Change this to your actual mod name
        $zipName = "$modName-${{ matrix.version }}-$tagVersion.zip"
        
        # Create temp directory
        New-Item -ItemType Directory -Force -Path "temp_${{ matrix.version }}"
        
        # Copy common files
        Copy-Item "About" -Destination "temp_${{ matrix.version }}/" -Recurse
        Copy-Item "Languages" -Destination "temp_${{ matrix.version }}/" -Recurse
        Copy-Item "Docs" -Destination "temp_${{ matrix.version }}/" -Recurse -ErrorAction SilentlyContinue
        Copy-Item "Example" -Destination "temp_${{ matrix.version }}/" -Recurse -ErrorAction SilentlyContinue
        
        # Copy version-specific assemblies
        Copy-Item "${{ matrix.version }}/Assemblies" -Destination "temp_${{ matrix.version }}/" -Recurse
        
        # Copy Libraries
        Copy-Item "Libraries" -Destination "temp_${{ matrix.version }}/" -Recurse
        
        # Create the zip file
        Compress-Archive -Path "temp_${{ matrix.version }}/*" -DestinationPath $zipName -CompressionLevel Optimal
        
        # Cleanup
        Remove-Item "temp_${{ matrix.version }}" -Recurse -Force
        
        echo "Created: $zipName"
      shell: pwsh
      
    - name: Upload Artifact for ${{ matrix.version }}
      uses: actions/upload-artifact@v4
      with:
        name: rimapi-${{ matrix.version }}
        path: RIMAPI-${{ matrix.version }}-*.zip
        retention-days: 30
        
  release:
    runs-on: windows-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Download All Artifacts
      uses: actions/download-artifact@v4
      
    - name: List Files for Release
      run: dir -Recurse
      shell: pwsh
      
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          rimapi-1.5/*.zip
          rimapi-1.6/*.zip
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}